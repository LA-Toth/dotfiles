(custom-set-variables
  ;; custom-set-variables was added by Custom -- don't edit or cut/paste it!
  ;; Your init file should contain only one such instance.
 '(all-christian-calendar-holidays t t)
 '(case-fold-search t)
 '(chess-default-engine (quote (chess-gnuchess chess-crafty chess-phalanx)))
 '(column-number-mode t)
 '(current-language-environment "UTF-8")
 '(default-input-method "rfc1345")
 '(delete-selection-mode nil nil (delsel))
 '(fill-column 120)
 '(global-font-lock-mode t nil (font-lock))
 '(mouse-wheel-follow-mouse t)
 '(mouse-wheel-mode t nil (mwheel))
 '(mouse-yank-at-point t)
 '(partial-completion-mode t nil (complete))
 '(require-final-newline (quote ask))
 '(save-place t nil (saveplace))
 '(scroll-bar-mode (quote right))
 '(show-paren-mode t nil (paren))
 '(text-mode-hook (quote (turn-on-auto-fill text-mode-hook-identify)))
 '(transient-mark-mode t)
 '(uniquify-buffer-name-style (quote forward) nil (uniquify))
 '(view-calendar-holidays-initially t t))
(custom-set-faces
  ;; custom-set-faces was added by Custom -- don't edit or cut/paste it!
  ;; Your init file should contain only one such instance.
 )
(global-set-key [f5] 'copy-region-as-kill) ; Copy
(global-set-key [f7] 'search-forward) ; search
(global-set-key "\C-cxs"  'search-forward) ; search
(global-set-key "\C-cxf"  'search-forward) ; search
(global-set-key "\C-cxb" 'search-backward) ; search
(global-set-key "\C-cxq" 'search-backward-regexp) ; search
(global-set-key "\C-cxw" 'search-forward-regexp) ; search
(global-set-key "\C-cxg"  'goto-line) ; Go To Line Number: :)
(global-set-key "\C-cxa"  'indent-region) ; Indent region
(global-set-key "\C-cxi"  'indent-region) ; Indent region
(global-set-key "\C-cxu"  'uncomment-region) ; Uncomment region
(global-set-key "\C-cxc"  'comment-region) ; Comment region
(load "/usr/share/emacs/site-lisp/site-gentoo.el")
(require 'php-mode)
(require 'doxymacs)
(add-hook 'c-mode-common-hook 'doxymacs-mode)
(add-hook 'php-mode-common-hook 'doxymacs-mode)
(defun my-doxymacs-font-lock-hook ()
  (if (or (eq major-mode 'c-mode) (eq major-mode 'c++-mode) (eq major-mode 'php-mode))
    (doxymacs-font-lock)))
(add-hook 'font-lock-mode-hook 'my-doxymacs-font-lock-hook)
(defalias 'perl-mode 'cperl-mode)
(setq cperl-electric-keywords t) ;; expands for keywords such as
                                     ;; foreach, while, etc...
(setq cperl-hairy t) ;; Turns on most of the CPerlMode options
(set-default-coding-systems 'utf-8)
(set-terminal-coding-system 'utf-8)

(defun my-insert-text (arg)
    "Inserting Text"    
  (interactive p)
    (insert "" arg)
)



;; Mindenfele kornyezet - tetel, s tarsai
(global-set-key "\C-ct1" '(lambda ()
                         (interactive)
			 (message "Inserting: TETEL")
			 (insert "" "\\begin{te}\n  \n\\end{te}\n")
			 (forward-line -2)
			 (forward-char 2)
			 ))
(global-set-key "\C-ct2" '(lambda ()
                         (interactive)
			 (message "Inserting: DEFINICIO")
			 (insert "" "\\begin{de}\n  \n\\end{de}\n")
			 (forward-line -2)
			 (forward-char 2)
			 ))
(global-set-key "\C-ct3" '(lambda ()
                         (interactive)
			 (message "Inserting: LEMMA")
			 (insert "" "\\begin{lemma}\n  \n\\end{lemma}\n")
			 (forward-line -2)
			 (forward-char 2)
			 ))
(global-set-key "\C-ct4" '(lambda ()
                         (interactive)
			 (message "Inserting: BIZONYITAS")
			 (insert "" "\\begin{biz}\n  \n\\end{biz}\n")
			 (forward-line -2)
			 (forward-char 2)
			 ))
(global-set-key "\C-ct5" '(lambda ()
                         (interactive)
			 (message "Inserting: KOVETKEZMENY")
			 (insert "" "\\begin{kov}\n  \n\\end{kov}\n")
			 (forward-line -2)
			 (forward-char 2)
			 ))
(global-set-key "\C-ct6" '(lambda ()
                         (interactive)
			 (message "Inserting: MEGJEGYZES")
			 (insert "" "\\begin{megj}\n  \n\\end{megj}\n")
			 (forward-line -2)
			 (forward-char 2)
			 ))
(global-set-key "\C-ct8" '(lambda ()
                         (interactive)
			 (message "Inserting: BIZONYITAS - Körözött")
			 (insert "" "\\begin{Biz}\n  \n\\end{Biz}\n")
			 (forward-line -2)
			 (forward-char 2)
			 ))
(global-set-key "\C-ct9" '(lambda ()
                         (interactive)
			 (message "Inserting: MEGJEGYZES - Körözött")
			 (insert "" "\\begin{Megj}\n  \n\\end{Megj}\n")
			 (forward-line -2)
			 (forward-char 2)
			 ))

;; felsorolasok
(global-set-key "\C-ctr" '(lambda ()
                         (interactive)
			 (message "Inserting: ENUM ZJEL ROMAI")
			 (insert "" "\\begin{enumzjr}\n  \\item \n\\end{enumzjr}\n")
			 (forward-line -2)
			 (forward-char 8)
			 ))
(global-set-key "\C-ctb" '(lambda ()
                         (interactive)
			 (message "Inserting: ENUM ZJEL BETU")
			 (insert "" "\\begin{enumzjr}\n  \\item \n\\end{enumzjr}\n")
			 (forward-line -2)
			 (forward-char 8)
			 ))
(global-set-key "\C-ctn" '(lambda ()
                         (interactive)
			 (message "Inserting: ENUMERATE")
			 (insert "" "\\begin{enumerate}\n  \\item \n\\end{enumerate}\n")
			 (forward-line -2)
			 (forward-char 8)
			 ))
(global-set-key "\C-ctI" '(lambda ()
                         (interactive)
			 (message "Inserting: ENUMERATE")
			 (insert "" "\\begin{itemize}\n  \\item \n\\end{itemize}\n")
			 (forward-line -2)
			 (forward-char 8)
			 ))
(global-set-key "\C-ctl" '(lambda ()
                         (interactive)
			 (message "Inserting: bizlist")
			 (insert "" "\\begin{bizlist}\n  \\item \n\\end{bizlist}\n")
			 (forward-line -2)
			 (forward-char 8)
			 ))
(global-set-key "\C-cti" '(lambda ()
                         (interactive)
			 (message "Inserting: ENUM ITEM")
			 (insert "" "\n  \\item ")
			 ))
;; egyeb
(global-set-key "\C-ctc" '(lambda ()
                         (interactive)
			 (message "Inserting: C to C (functions)")
			 (insert "" "\\C\\to\\C")))
(global-set-key "\C-ctd" '(lambda ()
                         (interactive)
			 (message "Inserting: dfrac")
			 (insert "" "\\dfrac{}{}")
			 (forward-char -3)
			 ))
(global-set-key "\C-ctg" '(lambda ()
                         (interactive)
			 (message "Inserting: GATHER*")
			 (insert "" "\\begin{gather*}\n  \n\\end{gather*}\n")
			 (forward-line -2)
			 (forward-char 2)
			 ))
(global-set-key "\C-ctq" '(lambda ()
                         (interactive)
			 (message "Inserting: QUAD")
			 (insert "" "\\quad ")
			 ))

(global-set-key "\C-cth" '(lambda ()
                         (interactive)
			 (message "Inserting: SET")
			 (insert "" "\\{\\, : \\,\\}")
			 (forward-char -6)
			 ))
(global-set-key "\C-ctm" '(lambda ()
                         (interactive)
			 (message "Inserting: bMATRIX")
			 (insert "" "\\begin{bmatrix}  \\end{bmatrix}")
			 (forward-char -14)
			 ))

(global-set-key "\C-ctV" '(lambda ()
                         (interactive)
			 (message "Inserting: Verbatim")
			 (insert "" "\\begin{Verbatim}\n\n\\end{Verbatim}")
			 (forward-line -1)
			 ))
(global-set-key "\C-ctv0" '(lambda ()
                         (interactive)
			 (message "Inserting: Verbatim")
			 (insert "" "\\begin{Verbatim}\n\n\\end{Verbatim}")
			 (forward-line -1)
			 ))
(global-set-key "\C-ctv1" '(lambda ()
                         (interactive)
			 (message "Inserting: Verbatim")
			 (insert "" "\\begin{Verbatim}\n  \n\\end{Verbatim}")
			 (forward-line -1)
			 (forward-char 2)
			 ))
(global-set-key "\C-ctv2" '(lambda ()
                         (interactive)
			 (message "Inserting: Verbatim")
			 (insert "" "\\begin{Verbatim}\n    \n\\end{Verbatim}")
			 (forward-line -1)
			(forward-char 4)
			 ))
(global-set-key "\C-ctvv" '(lambda ()
                         (interactive)
			 (message "Inserting: Verbatim[frame=single]")
			 (insert "" "\\begin{Verbatim}[frame=single]\n\n\\end{Verbatim}")
			 (forward-line -1)
			 ))
(global-set-key "\C-ctt" '(lambda ()
                         (interactive)
			 (message "Inserting: texttt")
			 (insert "" "\\texttt{}")
			 (forward-char -1)
			 ))

;; mindenféle cucc, ami kapcsoszárójelet tartalmaz
(global-set-key "\C-ctss" '(lambda ()
                         (interactive)
			 (message "Inserting: scalar")
			 (insert "" "\\skalar{}{}")
			 (forward-char -3)
			 ))
(global-set-key "\C-ctsd" '(lambda ()
                         (interactive)
			 (message "Inserting: dfrac")
			 (insert "" "\\dfrac{}{}")
			 (forward-char -3)
			 ))
(global-set-key "\C-ctsf" '(lambda ()
                         (interactive)
			 (message "Inserting: frac")
			 (insert "" "\\frac{}{}")
			 (forward-char -3)
			 ))

;; egyéb cucc :)
(global-set-key "\C-ctfv" '(lambda ()
                         (interactive)
			 (message "Inserting: vektor")
			 (insert "" "\\vekt")
			 ))
(global-set-key "\C-ctfc" '(lambda ()
                         (interactive)
			 (message "Inserting: cdot")
			 (insert "" "\\cdot")
			 ))

;; könyv, stb részek (fejezet, etc)
(global-set-key "\C-cts1" '(lambda ()
                         (interactive)
			 (message "Inserting: PART")
			 (insert "" "\n\n\\part{}\n")
			 (forward-char -2)
			 ))
(global-set-key "\C-cts2" '(lambda ()
                         (interactive)
			 (message "Inserting: CHAPTER")
			 (insert "" "\n\n\\chapter{}\n")
			 (forward-char -2)
			 ))
(global-set-key "\C-cts3" '(lambda ()
                         (interactive)
			 (message "Inserting: SECTION")
			 (insert "" "\n\n\\section{}\n")
			 (forward-char -2)
			 ))
(global-set-key "\C-cts4" '(lambda ()
                         (interactive)
			 (message "Inserting: SUBSECTION")
			 (insert "" "\n\n\\subsection{}\n")
			 (forward-char -2)
			 ))
(global-set-key "\C-cts5" '(lambda ()
                         (interactive)
			 (message "Inserting: SubSubSECTION")
			 (insert "" "\n\n\\subsubsection{}\n")
			 (forward-char -2)
			 ))
(global-set-key "\C-cts6" '(lambda ()
                         (interactive)
			 (message "Inserting: PARAGRAPH")
			 (insert "" "\n\n\\paragraph{}")
			 (forward-char -1)
			 ))
;; par extra

(global-set-key "\C-ctx1" '(lambda ()
                         (interactive)
			 (message "Inserting: SUPERSET")
			 (insert "" "^{}")
			 (forward-char -1)
			 ))
(global-set-key "\C-ctx2" '(lambda ()
                         (interactive)
			 (message "Inserting: SUBSET")
			 (insert "" "_{}")
			 (forward-char -1)
			 ))
(global-set-key "\C-ctx3" '(lambda ()
                         (interactive)
			 (message "Inserting: POINT_0")
			 (insert "" "(x_0,y_0,z_0)")
			 ))
(global-set-key "\C-ctx4" '(lambda ()
                         (interactive)
			 (message "Inserting: PARTIAL")
			 (insert "" "\\partial")
			 ))
(global-set-key "\C-ctx5" '(lambda ()
                         (interactive)
			 (message "Inserting: F(u_0,v_0)")
			 (insert "" " F(u_0,v_0)")
			 ))
(global-set-key "\C-ctx6" '(lambda ()
                         (interactive)
			 (message "Inserting: ESF + par")
			 (insert "" "$\\F\\subset\\R^3$ ESF, $F\\colon \\I^2\\to\\R^3$ egy paraméterezése")
			 ))

;(defun multiply-by-seven (number)       ; Interactive version.
;  "Multiply NUMBER by seven."
;  (interactive "p")
;  (message "The result is %d" (* 7 number)))


;; Altalanos environment
(defun insert-environment (name)
    "Insert environment NAME"
    (interactive "sEnvironment name: ")
    (message "Inserting environment `%s'" name)
    (insert (format "\\begin{%s}\n\n\\end{%s}" name name))
    (forward-line -1)
    )
(global-set-key "\C-cte" 'insert-environment)

;; Rövidítések, stb.
(setq-default abbrev-mode t)                            ; enable abbreviations
(setq save-abbrevs t)                                   ; save abbreviations upon exiting xemacs
(setq abbrev-file-name "~/.emacs.d/my-abbreviations.el") ; the file storing the abbreviations
(if (file-readable-p abbrev-file-name)                  ; read the abbreviations every
  (read-abbrev-file abbrev-file-name)                   ; time xemacs is started
  )
(setq dabbrev-case-replace nil)  ; Preserve case when expanding
